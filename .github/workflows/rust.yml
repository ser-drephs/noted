name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # - name: Build
    #   run: cargo build --verbose
    # - name: Run tests
    #   run: cargo test --verbose
    - uses: paulhatch/semantic-version@v4.0.2
      id: semantic-version
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "/.?!:.*/"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(feat:)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-${increment}"
        # Indicate whether short tags like 'v1' should be supported. If false only full
        # tags like 'v1.0.0' will be recognized.
        short_tags: false
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false
    - name: Do something when a new release published
      run: |
        echo Major: ${{ steps.semantic-version.outputs.major }}
        echo Minor: ${{ steps.semantic-version.outputs.minor }}
        echo Patch: ${{ steps.semantic-version.outputs.patch }}
        echo Increment: ${{ steps.semantic-version.outputs.increment }}
        echo Version: ${{ steps.semantic-version.outputs.version }}
        echo Changed: ${{ steps.semantic-version.outputs.changed }}
    # - name: Chocolatey Action
    #   uses: crazy-max/ghaction-chocolatey@v1.6.0
    #   with:
    #     args: -h